{"version":3,"sources":["containers/Auth/Auth.module.css","containers/Auth/Auth.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css"],"names":["module","exports","auth","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignUp","inputChangedHandler","event","controlName","updatedControls","updateObject","_this","Object","C_Users_Cinch_Desktop_mdn_1_2_burger_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","checkValidity","setState","submitHandler","preventDefault","props","onAuth","switchAuthModeHandler","prevState","this","buildingBurger","authRedirectPath","onSetAuthRedirectPath","_this2","formElementsArray","key","push","id","config","form","map","formElement","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_10__","onChange","invalid","shouldValidate","loading","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_13__","errorMessage","error","message","authRedirect","isAuthenticated","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","to","className","classes","onSubmit","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_11__","btnType","click","Component","connect","token","burgerBuilder","building","dispatch","actions","path","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","inputElement","inputClasses","assign","join","options","option","displayValue","htmlFor","label","input-container","input--invalid"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,KAAA,qMCUZC,6MACJC,MAAQ,CACNC,SAAU,CACRC,MAAO,CACLC,YAAa,QACbC,cAAe,CACbC,KAAM,QACNC,YAAa,cAEfC,MAAO,GACPC,WAAY,CACVC,UAAU,EACVC,SAAS,GAEXC,OAAO,EACPC,SAAS,GAEXC,SAAU,CACRV,YAAa,QACbC,cAAe,CACbC,KAAM,WACNC,YAAa,iBAEfC,MAAO,GACPC,WAAY,CACVC,UAAU,EACVK,UAAW,GAEbH,OAAO,EACPC,SAAS,IAGbG,UAAU,KASZC,oBAAsB,SAACC,EAAOC,GAC5B,IAAMC,EAAkBC,YAAaC,EAAKrB,MAAMC,SAAZqB,OAAAC,EAAA,EAAAD,CAAA,GACjCJ,EAAcE,YAAaC,EAAKrB,MAAMC,SAASiB,GAAc,CAC5DX,MAAOU,EAAMO,OAAOjB,MACpBI,MAAOc,YAAcR,EAAMO,OAAOjB,MAAOc,EAAKrB,MAAMC,SAASiB,GAAaV,YAC1EI,SAAS,MAIbS,EAAKK,SAAS,CAAEzB,SAAUkB,OAG5BQ,cAAgB,SAACV,GACfA,EAAMW,iBACNP,EAAKQ,MAAMC,OAAOT,EAAKrB,MAAMC,SAASC,MAAMK,MAAOc,EAAKrB,MAAMC,SAASY,SAASN,MAAOc,EAAKrB,MAAMe,aAGpGgB,sBAAwB,WACtBV,EAAKK,SAAS,SAACM,GACb,MAAO,CAAEjB,UAAWiB,EAAUjB,gGAxB3BkB,KAAKJ,MAAMK,gBAAkD,MAAhCD,KAAKJ,MAAMM,kBAC3CF,KAAKJ,MAAMO,sBAAsB,sCA2B5B,IAAAC,EAAAJ,KACDK,EAAoB,GAC1B,IAAK,IAAIC,KAAON,KAAKjC,MAAMC,SACzBqC,EAAkBE,KAAK,CACrBC,GAAIF,EACJG,OAAQT,KAAKjC,MAAMC,SAASsC,KAGhC,IAAII,EAAOL,EAAkBM,IAAI,SAAAC,GAAW,OAC1CC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,IAAKM,EAAYJ,GACjBtC,YAAa0C,EAAYH,OAAOvC,YAChCC,cAAeyC,EAAYH,OAAOtC,cAClCG,MAAOsC,EAAYH,OAAOnC,MAC1B2C,SAAU,SAACjC,GAAD,OAAWoB,EAAKrB,oBAAoBC,EAAO4B,EAAYJ,KACjEU,SAAUN,EAAYH,OAAO/B,MAC7ByC,eAAgBP,EAAYH,OAAOlC,WACnCI,QAASiC,EAAYH,OAAO9B,YAI5BqB,KAAKJ,MAAMwB,UACbV,EACEG,EAAAC,EAAAC,cAACM,EAAA,EAAD,OAIJ,IAAIC,EAAe,KACftB,KAAKJ,MAAM2B,QACbD,EACET,EAAAC,EAAAC,cAAA,SAAIf,KAAKJ,MAAM2B,MAAMC,UAGzB,IAAIC,EAAe,KAKnB,OAJIzB,KAAKJ,MAAM8B,kBACbD,EAAeZ,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAUC,GAAI5B,KAAKJ,MAAMM,oBAIxCW,EAAAC,EAAAC,cAAA,OAAKc,UAAWC,IAAQjE,MACrB4D,EACAH,EACDT,EAAAC,EAAAC,cAAA,QAAMgB,SAAU/B,KAAKN,eAClBgB,EACDG,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQC,QAAQ,WAAhB,WAEFpB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEE,MAAOlC,KAAKF,sBACZmC,QAAQ,UAFV,aAE8BjC,KAAKjC,MAAMe,SAAW,UAAY,mBAhHrDqD,aA2IJC,sBArBS,SAACrE,GACvB,MAAO,CACLqD,QAASrD,EAAMF,KAAKuD,QACpBG,MAAOxD,EAAMF,KAAK0D,MAClBG,gBAAsC,OAArB3D,EAAMF,KAAKwE,MAC5BpC,eAAgBlC,EAAMuE,cAAcC,SACpCrC,iBAAkBnC,EAAMF,KAAKqC,mBAIN,SAACsC,GAC1B,MAAO,CACL3C,OAAQ,SAAC5B,EAAOW,EAAUE,GACxB,OAAO0D,EAASC,IAAaxE,EAAOW,EAAUE,KAEhDqB,sBAAuB,SAACuC,GACtB,OAAOF,EAASC,IAA4BC,OAKnCN,CAA6CtE,oCCtJ5D,IAAA6E,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAAE,EAAAC,GAkEeE,IA9DD,SAACrD,GACb,IAAIsD,EAAe,KAEbC,EAAe,CAACrB,IAAQmB,OAM9B,OAJIrD,EAAMsB,SAAWtB,EAAMuB,gBAAkBvB,EAAMjB,SACjDwE,EAAa5C,KAAKuB,IAAQ,mBAGrBlC,EAAM1B,aACX,IAAM,QACJgF,EACEL,EAAA/B,EAAAC,cAAA,QAAA1B,OAAA+D,OAAA,CACEvB,UAAWsB,EAAaE,KAAK,MACzBzD,EAAMzB,cAFZ,CAGEG,MAAOsB,EAAMtB,MACb2C,SAAUrB,EAAMqB,YAEpB,MAEF,IAAM,WACJiC,EACEL,EAAA/B,EAAAC,cAAA,WAAA1B,OAAA+D,OAAA,CACEvB,UAAWsB,EAAaE,KAAK,MACzBzD,EAAMzB,cAFZ,CAGEG,MAAOsB,EAAMtB,MACb2C,SAAUrB,EAAMqB,YAEpB,MAEF,IAAM,SACJiC,EACEL,EAAA/B,EAAAC,cAAA,UAAQc,UAAWsB,EAAaE,KAAK,KAAM/E,MAAOsB,EAAMtB,MAAO2C,SAAUrB,EAAMqB,UAC5ErB,EAAMzB,cAAcmF,QAAQ3C,IAAI,SAAC4C,GAChC,OACEV,EAAA/B,EAAAC,cAAA,UACET,IAAKiD,EAAOjF,MACZA,MAAOiF,EAAOjF,OACdiF,EAAOC,iBAKjB,MACF,QACIN,EACEL,EAAA/B,EAAAC,cAAA,QAAA1B,OAAA+D,OAAA,CACEvB,UAAWsB,EAAaE,KAAK,MACzBzD,EAAMzB,cAFZ,CAGEG,MAAOsB,EAAMtB,MACb2C,SAAUrB,EAAMqB,YAI1B,OACE4B,EAAA/B,EAAAC,cAAA,OAAKc,UAAWC,IAAQ,oBACtBe,EAAA/B,EAAAC,cAAA,SAAO0C,QAAQ,GAAG5B,UAAWC,IAAQ4B,OAAQ9D,EAAM8D,OAClDR,wBC5DPvF,EAAAC,QAAA,CAAkB+F,kBAAA,+BAAAD,MAAA,qBAAAT,MAAA,qBAAAW,iBAAA","file":"static/js/4.341ff08b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__hUVvq\"};","import React, { Component } from 'react';\r\nimport classes from './Auth.module.css';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport {updateObject, checkValidity} from '../../shared/utility';\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    controls: {\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'email',\r\n          placeholder: 'Your Email'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      password: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'password',\r\n          placeholder: 'Your Password'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n    },\r\n    isSignUp: true\r\n  }\r\n  \r\n  componentDidMount() {\r\n    if (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\r\n      this.props.onSetAuthRedirectPath('/');\r\n    }\r\n  }\r\n\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = updateObject(this.state.controls, {\r\n      [controlName]: updateObject(this.state.controls[controlName], {\r\n        value: event.target.value,\r\n        valid: checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n        touched: true\r\n      })\r\n    });\r\n\r\n    this.setState({ controls: updatedControls });\r\n  }\r\n  \r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\r\n  }\r\n\r\n  switchAuthModeHandler = () => {\r\n    this.setState((prevState) => {\r\n      return { isSignUp: !prevState.isSignUp };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key]\r\n      });\r\n    }\r\n    let form = formElementsArray.map(formElement => (\r\n      <Input\r\n        key={formElement.id}\r\n        elementType={formElement.config.elementType}\r\n        elementConfig={formElement.config.elementConfig}\r\n        value={formElement.config.value}\r\n        onChange={(event) => this.inputChangedHandler(event, formElement.id)}\r\n        invalid={!formElement.config.valid}\r\n        shouldValidate={formElement.config.validation}\r\n        touched={formElement.config.touched}\r\n      />\r\n    ));\r\n      \r\n    if (this.props.loading) {\r\n      form = (\r\n        <Spinner />\r\n      );\r\n    }\r\n\r\n    let errorMessage = null;\r\n    if (this.props.error) {\r\n      errorMessage = (\r\n        <p>{this.props.error.message}</p>\r\n      );\r\n    }\r\n    let authRedirect = null;\r\n    if (this.props.isAuthenticated) {\r\n      authRedirect = <Redirect to={this.props.authRedirectPath} />\r\n    }\r\n\r\n    return (\r\n      <div className={classes.auth}>\r\n        {authRedirect}\r\n        {errorMessage}\r\n        <form onSubmit={this.submitHandler}>\r\n          {form}\r\n          <Button btnType='success'>SUBMIT</Button>\r\n        </form>\r\n        <Button\r\n          click={this.switchAuthModeHandler}\r\n          btnType='danger'>SWITCH TO {this.state.isSignUp ? 'SIGN IN' : 'SIGN UP'}</Button>\r\n      </div>\r\n    )\r\n  } \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n    buildingBurger: state.burgerBuilder.building,\r\n    authRedirectPath: state.auth.authRedirectPath\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password, isSignUp) => {\r\n      return dispatch(actions.auth(email, password, isSignUp));\r\n    },\r\n    onSetAuthRedirectPath: (path) => {\r\n      return dispatch(actions.setAuthRedirectPath(path));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n  let inputElement = null;\r\n  \r\n  const inputClasses = [classes.input];\r\n\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(classes['input--invalid']);\r\n  }\r\n\r\n  switch(props.elementType) {\r\n    case ('input'):\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value} \r\n          onChange={props.onChange} />\r\n      );\r\n      break;\r\n\r\n    case ('textarea'):\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value} \r\n          onChange={props.onChange} />\r\n      );\r\n      break;\r\n\r\n    case ('select'):\r\n      inputElement = (\r\n        <select className={inputClasses.join(' ')} value={props.value} onChange={props.onChange}>\r\n          {props.elementConfig.options.map((option) => {\r\n            return (\r\n              <option\r\n                key={option.value} \r\n                value={option.value}\r\n              >{option.displayValue}</option>\r\n            );\r\n          })}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n        inputElement = (\r\n          <input\r\n            className={inputClasses.join(' ')}\r\n            {...props.elementConfig}\r\n            value={props.value} \r\n            onChange={props.onChange} />\r\n        );\r\n  }\r\n\r\n  return (\r\n    <div className={classes['input-container']}>\r\n      <label htmlFor=\"\" className={classes.label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  ) \r\n};\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-container\":\"Input_input-container__2nlmZ\",\"label\":\"Input_label__3FO8S\",\"input\":\"Input_input__1O4YC\",\"input--invalid\":\"Input_input--invalid__HcG93\"};"],"sourceRoot":""}