{"version":3,"sources":["containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css"],"names":["module","exports","contact-data","checkoutSummary","props","react_default","a","createElement","className","classes","style","width","margin","Burger","ingredients","Button","btnType","click","checkoutCancelled","checkoutContinued","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","minLength","maxLength","country","email","deliveryMethod","options","displayValue","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","_this","order","price","totalPrice","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","Object","defineProperty","setState","_this2","this","formElementsArray","key","push","id","config","form","onSubmit","map","formElement","Input","onChange","invalid","shouldValidate","disabled","loading","Spinner","Component","connect","burgerBuilder","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","react_router","to","purchasedRedirect","purchased","CheckoutSummary","path","match","component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","inputElement","inputClasses","assign","join","option","htmlFor","label","input-container","input--invalid","checkout-summary"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,eAAA,oLCsBHC,EAjBS,SAAAC,GACtB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ,qBACtBJ,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,OAAKG,MAAO,CAACC,MAAO,OAAQC,OAAQ,SAClCP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,YAAaV,EAAMU,eAE7BT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,QAAQ,SACRC,MAAOb,EAAMc,mBAFf,UAGAb,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,QAAQ,UACRC,MAAOb,EAAMe,mBAFf,uFCJAC,6MACJC,MAAQ,CACNC,UAAW,CACTC,KAAM,CACJC,YAAa,QACbC,cAAe,CACbC,KAAM,OACNC,YAAa,aAEfC,MAAO,GACPC,WAAY,CACVC,UAAU,GAEZC,OAAO,EACPC,SAAS,GAEXC,OAAQ,CACNT,YAAa,QACbC,cAAe,CACbC,KAAM,OACNC,YAAa,UAEfC,MAAO,GACPC,WAAY,CACVC,UAAU,GAEZC,OAAO,EACPC,SAAS,GAEXE,QAAS,CACPV,YAAa,QACbC,cAAe,CACbC,KAAM,OACNC,YAAa,YAEfC,MAAO,GACPC,WAAY,CACVC,UAAU,EACVK,UAAW,EACXC,UAAW,GAEbL,OAAO,EACPC,SAAS,GAEXK,QAAS,CACPb,YAAa,QACbC,cAAe,CACbC,KAAM,OACNC,YAAa,WAEfC,MAAO,GACPC,WAAY,CACVC,UAAU,GAEZC,OAAO,EACPC,SAAS,GAEXM,MAAO,CACLd,YAAa,QACbC,cAAe,CACbC,KAAM,QACNC,YAAa,cAEfC,MAAO,GACPC,WAAY,CACVC,UAAU,GAEZC,OAAO,EACPC,SAAS,GAEXO,eAAgB,CACdf,YAAa,SACbC,cAAe,CACbe,QAAS,CACP,CAACZ,MAAO,UAAWa,aAAc,WACjC,CAACb,MAAO,WAAYa,aAAc,cAGtCb,MAAO,UACPC,WAAY,GACZE,OAAO,IAGXW,aAAa,KAGfC,aAAe,SAACC,GACdA,EAAMC,iBAEN,IAAMC,EAAW,GACjB,IAAK,IAAIC,KAAyBC,EAAK3B,MAAMC,UAC3CwB,EAASC,GAAyBC,EAAK3B,MAAMC,UAAUyB,GAAuBnB,MAEhF,IAAMqB,EAAQ,CACZnC,YAAakC,EAAK5C,MAAMU,YACxBoC,MAAOF,EAAK5C,MAAM+C,WAClBC,UAAWN,EACXO,OAAQL,EAAK5C,MAAMiD,QAErBL,EAAK5C,MAAMkD,cAAcL,EAAOD,EAAK5C,MAAMmD,UAG7CC,oBAAsB,SAACZ,EAAOa,GAC5B,IAAMC,EAAqBC,YAAaX,EAAK3B,MAAMC,UAAUmC,GAAkB,CAC7E7B,MAAOgB,EAAMgB,OAAOhC,MACpBG,MAAO8B,YAAcjB,EAAMgB,OAAOhC,MAAOoB,EAAK3B,MAAMC,UAAUmC,GAAiB5B,YAC/EG,SAAS,IAGL8B,EAAmBH,YAAaX,EAAK3B,MAAMC,UAAZyC,OAAAC,EAAA,EAAAD,CAAA,GAClCN,EAAkBC,IAGjBhB,GAAc,EAClB,IAAK,IAAIe,KAAmBK,EAC1BpB,EAAcoB,EAAiBL,GAAiB1B,OAASW,EAG3DM,EAAKiB,SAAS,CACZ3C,UAAWwC,EACXpB,YAAaA,6EAIR,IAAAwB,EAAAC,KACDC,EAAoB,GAC1B,IAAK,IAAIC,KAAOF,KAAK9C,MAAMC,UACzB8C,EAAkBE,KAAK,CACrBC,GAAIF,EACJG,OAAQL,KAAK9C,MAAMC,UAAU+C,KAIjC,IAAII,EACFpE,EAAAC,EAAAC,cAAA,QAAMmE,SAAUP,KAAKxB,cACjByB,EAAkBO,IAAI,SAAAC,GACtB,OACEvE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CACER,IAAKO,EAAYL,GACjB/C,YAAaoD,EAAYJ,OAAOhD,YAChCC,cAAemD,EAAYJ,OAAO/C,cAClCG,MAAOgD,EAAYJ,OAAO5C,MAC1BkD,SAAU,SAAClC,GAAD,OAAWsB,EAAKV,oBAAoBZ,EAAOgC,EAAYL,KACjEQ,SAAUH,EAAYJ,OAAOzC,MAC7BiD,eAAgBJ,EAAYJ,OAAO3C,WACnCG,QAAS4C,EAAYJ,OAAOxC,YAIlC3B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQC,QAAQ,UAAUiE,UAAWd,KAAK9C,MAAMqB,aAAhD,UAMJ,OAHIyB,KAAK/D,MAAM8E,UACbT,EAAOpE,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,OAGP9E,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ,iBACtBJ,EAAAC,EAAAC,cAAA,qCACCkE,UA9JiBW,aAsLXC,cAlBS,SAAChE,GACvB,MAAO,CACLP,YAAaO,EAAMiE,cAAcxE,YACjCqC,WAAY9B,EAAMiE,cAAcnC,WAChC+B,QAAS7D,EAAM4B,MAAMiC,QACrB3B,MAAOlC,EAAMkE,KAAKhC,MAClBF,OAAQhC,EAAMkE,KAAKlC,SAII,SAACmC,GAC1B,MAAO,CACLlC,cAAe,SAACF,EAAWG,GACzB,OAAOiC,EAASC,IAAuBrC,EAAWG,OAKzC8B,CAA6CK,YAAiBtE,EAAauE,MC3LpFC,6MAEJC,yBAA2B,WACzB7C,EAAK5C,MAAM0F,QAAQC,YAGrBC,yBAA2B,WACzBhD,EAAK5C,MAAM0F,QAAQG,QAAQ,mGAI3B,IAAIC,EAAU7F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUC,GAAG,MAC3B,GAAIjC,KAAK/D,MAAMU,YAAa,CAC1B,IAAMuF,EAAoBlC,KAAK/D,MAAMkG,UAAYjG,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUC,GAAG,MAAS,KACvEF,EACE7F,EAAAC,EAAAC,cAAA,WACG8F,EACDhG,EAAAC,EAAAC,cAACgG,EAAD,CACEzF,YAAaqD,KAAK/D,MAAMU,YACxBI,kBAAmBiD,KAAK0B,yBACxB1E,kBAAmBgD,KAAK6B,2BAC1B3F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CACEK,KAAMrC,KAAK/D,MAAMqG,MAAMD,KAAO,gBAC9BE,UAAWtF,KAInB,OAAO8E,SA3BYd,aAsCRC,sBAPS,SAAChE,GACvB,MAAO,CACLP,YAAaO,EAAMiE,cAAcxE,YACjCwF,UAAWjF,EAAM4B,MAAMqD,YAIZjB,CAAyBO,oCC7CxC,IAAAe,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAAE,EAAAC,GAkEeE,IA9DD,SAAC7G,GACb,IAAI8G,EAAe,KAEbC,EAAe,CAAC1G,IAAQwG,OAM9B,OAJI7G,EAAM2E,SAAW3E,EAAM4E,gBAAkB5E,EAAM4B,SACjDmF,EAAa7C,KAAK7D,IAAQ,mBAGrBL,EAAMoB,aACX,IAAM,QACJ0F,EACEL,EAAAvG,EAAAC,cAAA,QAAAwD,OAAAqD,OAAA,CACE5G,UAAW2G,EAAaE,KAAK,MACzBjH,EAAMqB,cAFZ,CAGEG,MAAOxB,EAAMwB,MACbkD,SAAU1E,EAAM0E,YAEpB,MAEF,IAAM,WACJoC,EACEL,EAAAvG,EAAAC,cAAA,WAAAwD,OAAAqD,OAAA,CACE5G,UAAW2G,EAAaE,KAAK,MACzBjH,EAAMqB,cAFZ,CAGEG,MAAOxB,EAAMwB,MACbkD,SAAU1E,EAAM0E,YAEpB,MAEF,IAAM,SACJoC,EACEL,EAAAvG,EAAAC,cAAA,UAAQC,UAAW2G,EAAaE,KAAK,KAAMzF,MAAOxB,EAAMwB,MAAOkD,SAAU1E,EAAM0E,UAC5E1E,EAAMqB,cAAce,QAAQmC,IAAI,SAAC2C,GAChC,OACET,EAAAvG,EAAAC,cAAA,UACE8D,IAAKiD,EAAO1F,MACZA,MAAO0F,EAAO1F,OACd0F,EAAO7E,iBAKjB,MACF,QACIyE,EACEL,EAAAvG,EAAAC,cAAA,QAAAwD,OAAAqD,OAAA,CACE5G,UAAW2G,EAAaE,KAAK,MACzBjH,EAAMqB,cAFZ,CAGEG,MAAOxB,EAAMwB,MACbkD,SAAU1E,EAAM0E,YAI1B,OACE+B,EAAAvG,EAAAC,cAAA,OAAKC,UAAWC,IAAQ,oBACtBoG,EAAAvG,EAAAC,cAAA,SAAOgH,QAAQ,GAAG/G,UAAWC,IAAQ+G,OAAQpH,EAAMoH,OAClDN,wBC5DPlH,EAAAC,QAAA,CAAkBwH,kBAAA,+BAAAD,MAAA,qBAAAP,MAAA,qBAAAS,iBAAA,mDCAlB1H,EAAAC,QAAA,CAAkB0H,mBAAA","file":"static/js/3.bb04e2e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact-data\":\"ContactData_contact-data__1UIc8\"};","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = props => {\r\n  return (\r\n    <div className={classes['checkout-summary']}>\r\n      <h1>We hope it tastes well!</h1>\r\n      <div style={{width: '100%', margin: 'auto'}}>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <Button\r\n        btnType=\"danger\"\r\n        click={props.checkoutCancelled}>CANCEL</Button>\r\n      <Button\r\n        btnType=\"success\"\r\n        click={props.checkoutContinued}>CONTINUE</Button>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default checkoutSummary;","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\n\r\nimport axios from '../../../axios-orders';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\nimport {updateObject, checkValidity} from '../../../shared/utility';\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Your Name'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      street: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Street'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      zipCode: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Zip Code'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 5\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      country: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Country'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'email', \r\n          placeholder: 'Your Email'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      deliveryMethod: {\r\n        elementType: 'select',\r\n        elementConfig: {\r\n          options: [\r\n            {value: 'fastest', displayValue: 'Fastest'},\r\n            {value: 'cheapest', displayValue: 'Cheapest'}\r\n          ]\r\n        },\r\n        value: 'fastest',\r\n        validation: {},\r\n        valid: true\r\n      }\r\n    },\r\n    formIsValid: false,\r\n  }\r\n  \r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const formData = {};\r\n    for (let formElementIdentifier in this.state.orderForm) {\r\n      formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n    }\r\n    const order = {\r\n      ingredients: this.props.ingredients,\r\n      price: this.props.totalPrice,\r\n      orderData: formData,\r\n      userId: this.props.userId\r\n    };\r\n    this.props.onOrderBurger(order, this.props.token);\r\n  }\r\n\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier], {\r\n      value: event.target.value,\r\n      valid: checkValidity(event.target.value, this.state.orderForm[inputIdentifier].validation),\r\n      touched: true\r\n    });\r\n\r\n    const updatedOrderForm = updateObject(this.state.orderForm, {\r\n      [inputIdentifier]: updatedFormElement\r\n    });\r\n\r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n    \r\n    this.setState({\r\n      orderForm: updatedOrderForm,\r\n      formIsValid: formIsValid\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key]\r\n      });\r\n    }\r\n\r\n    let form = (\r\n      <form onSubmit={this.orderHandler}>\r\n        { formElementsArray.map(formElement => {\r\n          return (\r\n            <Input\r\n              key={formElement.id}\r\n              elementType={formElement.config.elementType}\r\n              elementConfig={formElement.config.elementConfig}\r\n              value={formElement.config.value}\r\n              onChange={(event) => this.inputChangedHandler(event, formElement.id)}\r\n              invalid={!formElement.config.valid}\r\n              shouldValidate={formElement.config.validation}\r\n              touched={formElement.config.touched}\r\n              />\r\n            );\r\n        }) }\r\n        <Button btnType='success' disabled={!this.state.formIsValid}>ORDER</Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />\r\n    }\r\n    return (\r\n      <div className={classes['contact-data']}>\r\n        <h4>Enter your Contact Data</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onOrderBurger: (orderData, token) => {\r\n      return dispatch(actions.purchaseBurger(orderData, token));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, {Component} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n\r\n  checkoutCancelledHandler = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  checkoutContinuedHandler = () => {\r\n    this.props.history.replace('/checkout/contact-data');\r\n  }\r\n\r\n  render () {\r\n    let summary = <Redirect to=\"/\" />;\r\n    if (this.props.ingredients) {\r\n      const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n      summary = (\r\n        <div>\r\n          {purchasedRedirect}\r\n          <CheckoutSummary\r\n            ingredients={this.props.ingredients}\r\n            checkoutCancelled={this.checkoutCancelledHandler}\r\n            checkoutContinued={this.checkoutContinuedHandler} />\r\n          <Route\r\n            path={this.props.match.path + '/contact-data'}\r\n            component={ContactData} />\r\n        </div>\r\n      );\r\n    }\r\n    return summary;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    purchased: state.order.purchased\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n  let inputElement = null;\r\n  \r\n  const inputClasses = [classes.input];\r\n\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(classes['input--invalid']);\r\n  }\r\n\r\n  switch(props.elementType) {\r\n    case ('input'):\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value} \r\n          onChange={props.onChange} />\r\n      );\r\n      break;\r\n\r\n    case ('textarea'):\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value} \r\n          onChange={props.onChange} />\r\n      );\r\n      break;\r\n\r\n    case ('select'):\r\n      inputElement = (\r\n        <select className={inputClasses.join(' ')} value={props.value} onChange={props.onChange}>\r\n          {props.elementConfig.options.map((option) => {\r\n            return (\r\n              <option\r\n                key={option.value} \r\n                value={option.value}\r\n              >{option.displayValue}</option>\r\n            );\r\n          })}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n        inputElement = (\r\n          <input\r\n            className={inputClasses.join(' ')}\r\n            {...props.elementConfig}\r\n            value={props.value} \r\n            onChange={props.onChange} />\r\n        );\r\n  }\r\n\r\n  return (\r\n    <div className={classes['input-container']}>\r\n      <label htmlFor=\"\" className={classes.label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  ) \r\n};\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-container\":\"Input_input-container__2nlmZ\",\"label\":\"Input_label__3FO8S\",\"input\":\"Input_input__1O4YC\",\"input--invalid\":\"Input_input--invalid__HcG93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkout-summary\":\"CheckoutSummary_checkout-summary__1zCcm\"};"],"sourceRoot":""}